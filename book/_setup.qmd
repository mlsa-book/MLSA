::: {.content-hidden}
$$
{{< include _macros.tex >}}
$$
:::

```{r utils,echo=FALSE}
toproper = function(str) {
  str = strsplit(str, " ", TRUE)[[1]]
  paste0(toupper(substr(str, 1, 1)), tolower(substr(str, 2, 100)), collapse = " ")
}
```

```{r index_functions, include = FALSE, cache = FALSE}
index = function(main = NULL, code = FALSE, lower = TRUE) {
  entry = if (code || !lower) main else tolower(main)
  text = if (code) sprintf("`%s`", main) else main
  sprintf("\\index{%s}%s", entry, main)
}
```

```{r link_functions, include = FALSE, cache = FALSE}
link = function(url) {
  sprintf("[%s](%s)", url, url)
}
```

```{r reference_functions, include = FALSE, cache = FALSE}
ref = function(topic, index = FALSE) {

  topic = trimws(topic)

  stopifnot(grepl(pattern = "^[[:alnum:]]::[[:alnum:]]$"), topic)

  if (grepl("::", topic, fixed = TRUE)) {
    parts = strsplit(topic, "::", fixed = TRUE)[[1L]]
    topic = parts[2L]
    name = sub("\\(\\)$", "", parts[2L])
    pkg = parts[1L]
  }

  url = sprintf("https://www.rdocumentation.org/packages/%s/topics/%s", pkg, name)

  out = sprintf("[`%s`](%s)", topic, url)

  if (index) {
    out = paste0(out, index(main = NULL, index = topic, code = TRUE))
  }

  out
}
```

```{r reference_packages, include = FALSE, cache = FALSE}
pkg = function(pkg, github = TRUE, index = TRUE) {
  pkg = trimws(pkg)

  if (grepl("/", pkg, fixed = TRUE)) {
    if (github) {
      out = .gh_pkg(pkg)
    } else {
      out = .ru_pkg(pkg)
    }
  } else {
    out = .cran_pkg(pkg)
  }

  if (index) {
    out = sprintf("%s\\index{\\texttt{%s}}", out, pkg)
  }

  out
}

.cran_pkg = function(pkg) {
  if (pkg %in% c("stats", "graphics", "datasets")) {
    sprintf("`%s`", pkg)
  } else {
    url = sprintf("https://cran.r-project.org/package=%s", pkg)
    sprintf("[`%s`](%s)", pkg, url)
  }
}

.gh_pkg = function(pkg) {
  sprintf("[`%s`](https://github.com/%s)", pkg, pkg)
}

.ru_pkg = function(pkg) {
  parts = strsplit(pkg, "/", fixed = TRUE)[[1L]]
  url = sprintf("https://%s.r-universe.dev/ui#package:%s", parts[1L], parts[2L])
  sprintf("[`%s`](%s)", pkg, url)
}
```

```{r include_multi_graphics, include = FALSE, cache = FALSE}
include_multi_graphics = function(fig_name) {
  fmt = if (knitr::is_latex_output()) "png" else "svg"
  knitr::include_graphics(sprintf("Figures/%s.%s", fig_name, fmt), dpi = 600)
}
```