---
abstract: TODO (150-200 WORDS)
---

::: {.content-visible when-format="html"}
{{< include _macros.tex >}}
:::

# Classical Statistical Models {#sec-models-classical}

---

TODO

* Objective functions
* Move PO into flexible

---

{{< include _wip.qmd >}}

Defining if a model is 'machine learning' is surprisingly difficult, with terms such as 'iterative' and 'loss optimization' being frequently used in often clunky definitions.
This book defines machine learning models as those that:

1. Require intensive model fitting procedures such as recursion or iteration;
2. Are flexible with hyper-parameters that can be tuned;
3. Trained using some form of loss optimization;
4. Are 'black boxes' without simple closed-form expressions that can be easily interpreted;
5. Aim to minimize the difference between predictions and truth whilst placing minimal assumptions on the underlying data form.

In contrast, 'classical statistical' (or 'classical') models, refer here to low-complexity models that are either non-parametric or have a simple closed-form expression with parameters that can be fit with maximum likelihood estimation (or an analogous method).
Further, classical models are assumed to be fast to fit and highly interpretable, though can be inflexible and may make unreasonable assumptions as they assume underlying probability distributions to model data.

Whilst this book is focused on machine learning, there are a few reasons to include a chapter on classical models.

Firstly, the boundary between machine learning and classical models is fuzzy as the latter can be augmented with modern machine learning methods to create a model that could be termed as 'machine learning' (@sec-classical-improving).
In fact, several papers have demonstrated that augmenting classical models in this way yields models that outperform machine learning alternatives even on high-dimensional data (when the number of variables far exceeds the number of rows) [@Zhang2021; @Spooner2020].
Secondly, the majority of machine learning survival algorithms make use of classical models, often using the Kaplan-Meier estimator (@sec-classical-nonpar) and/or assuming a proportional hazards form (@sec-classical-cox), as a central component to construct an algorithm around.
Finally, on lower dimensional data, classical algorithms often outperform machine learning models even without further adjustment [@Beaulac2020; @Burk2024].

Therefore, a robust understanding of classical models is imperative to fairly construct and evaluate machine learning survival models.
This chapter begins with a recap of estimators seen in the first part of this book and demonstrating how they can be used as predictive models, with further estimators then introduced.
Semi- and fully-parametric models are then introduced, most notably the Cox proportional hazards model and the accelerated failure time models.
Finally, methods to improve classical models through machine learning methodology is presented.

## Non-Parametric Estimators {#sec-classical-nonpar}

The Kaplan-Meier estimator [@Kaplan1958] was introduced in @sec-surv-km as the step-function

$$
\KMS(\tau) = \prod_{k:t_{(k)} \leq \tau}\left(1-\frac{d_{t_{(k)}}}{n_{t_{(k)}}}\right)
$$ {#eq-km-ml}

where $t(k)$ are ordered event times, $d_{t_{(k)}}$ and $n_{t_{(k)}}$ are the number of events and observations at risk at $t_{(k)}$ respectively.
In @sec-surv-km, this was discussed as an estimator for visualizing survival distributions and for descriptive analysis.
However, now consider how this estimator could be used as a simple predictive method.
As an unconditional non-parametric method, the estimator assumes no distribution for survival times and ignores any covariate data.
Say we are given the following dataset of survival outcomes:

|litter |rx |sex |time |status |
|:------|:--|:---|:----|:------|
|6      |0  |m   |62   |0      |
|57     |0  |f   |55   |1      |
|60     |1  |m   |104  |0      |
|85     |1  |f   |92   |1      |
|97     |0  |f   |91   |0      |

: Sample of the $\code{rats}$ dataset from $\Rstats$ package $\pkg{survival}$. {#tbl-rats}

@tbl-rats-km below demonstrates construction of the Kaplan-Meier estimator at each possible time-point, where the second column is the contribution to the estimator at the given time:

| $\tau$ | $1 - d/n$ | $\KMS(\tau)$ |
|------| --- | -- |
| 55 | 0.8 | 0.8 |
| 62 | 1 | 0.8 |
| 91 | 1 | 0.8 |
| 92 | 0.5 | 0.4 |
| 104 | 1 | 0.4 |

: Kaplan-Meier contributions (second column) and estimation (third column) at each time $\tau$ based on the data from @tbl-rats. {#tbl-rats-km}

Now if @tbl-rats is taken to be training data, then the values in @tbl-rats-km can be used to predict the probability of survival at a given time.
For example, without needing to know any other information about a new rat that enters the data (for these estimators ignore covariates), there is an $80\%$ chance of survival until $\tau = 60$ is 80\%, which drops to $40\%$ after 92 days.

Estimating the Kaplan-Meier on training data and using those values for predictions of new data, yields a 'baseline' model that can be compared to more sophisticated alternatives to improve interpretability in model evaluation (@sec-eval-distr-score-base).
In this book, $\KMS$ specifically refers to the Kaplan-Meier estimator fit on some training data.
Similarly, $\KMG$ specifically refers to the Kaplan-Meier estimator fit on the observed censoring times $(t_i, 1-\delta_i)$ from some training data.

The Nelson-Aalen estimator [@Aalen1978; @Nelson1972], introduced in @sec-nonparametric, can also be used as a baseline predictive model.

$$
\hatH_{NA}(\tau) = \sum_{t_{(k)}\leq \tau} \frac{d_{t_{(k)}}}{n_{t_{(k)}}}.
$$

The Kaplan-Meier and Nelson-Aalen estimators are consistent estimators for the survival and cumulative hazard functions respectively; the former is more widely utilized as a baseline estimator [@Herrmann2020; @Huang2020; @Wang2017].
As well as supporting in interpretability, both methods can be used for graphical calibration of models (@sec-eval-distr-calib-prob), components of complex models (@sec-car), and other diagnostic graphical tools [@Habibi2018; @Jager2008; @Moghimi-dehkordi2008].

By ignoring covariates, neither estimator is expected to perform well in practice as predictive models.
Moreover, the assumption of uninformative censoring rarely holds true.
One alternative is to consider a conditional non-parametric estimator that can take into account covariates.
The Akritas estimator [@Akritas1994] is usually defined by [@Blanche2013]:

$$
\hatS(\tau|\xx^*, \lambda) = \prod_{k:t(k)\leq \tau} \Big(1 - \frac{\sum^n_{i=1} K(\xx^*,\xx_i|\lambda)\II(t_i = t(k), \delta_i = 1)}{\sum^n_{i=1} K(\xx^*,\xx_i|\lambda)\II(t_i \geq t(k))}\Big)
$$ {#eq-akritas}

where $K$ is a kernel function, usually $K(x,y|\lambda) = \II(\lvert \hat{F}_X(x) - \hat{F}_X(y)\rvert < \lambda), \lambda \in (0, 1]$, $\hat{F}_X$ is the empirical distribution function of the data, and $\lambda$ is a hyper-parameter.
The estimator can be interpreted as a conditional Kaplan-Meier estimator which is computed on a neighbourhood of subjects closest to $\xx^*$.
In fact, if $\lambda = 1$ then $K(\cdot|\lambda) = 1$ and @eq-akritas is identical to @eq-km-ml.

The formulation in @eq-akritas includes fitting and predicting in one step as the usual application of the model is as a non-parametric estimator.
By first estimating $\hatF_X$ on separate training data, the estimator can be used as a baseline predictive model.

## Proportional Hazards {#sec-classical-cox}

This section begins with an introduction to the proportional hazards concept using the Cox PH model and then moves to fully parametric proportional hazards, with WeibullPH as a motivating example.

### Semi-Parametric Proportional Hazards

The Cox Proportional Hazards (Cox PH)  [@Cox1972], or Cox model, is likely the most widely known semi-parametric model and the most studied survival model [@Reid1994; @Wang2017].
Let $\eta_i = \xx_i^\trans\bsbeta$ be the linear predictor for some observation $i$ with covariates $\xx_i$ and model coefficients $\bsbeta \in \Reals^p$, then the Cox model assumes the hazard function for $i$ follows the form:

$$
h_{Cox}(\tau|\xx_i)= h_0(\tau)\exp(\eta_i)
$$ {#eq-cox}

or equivalently

$$
S_{Cox}(\tau|\xx_i)= S_0(\tau)^{\exp(\eta_i)}
$$ {#eq-cox-surv}


Ignoring the $h_0$ term for now, this form encodes the eponymous 'proportional hazards' assumption as the individual's hazard at time $\tau$ is directly proportional to their own covariates: $h(\tau|\xx_i) \propto \exp(\eta_i)$.
In words, at a given time, the risk of an event taking place increases/decreases in constant proportion to the linear predictor and vice versa.
Moreover, the individual's risk of event is constant over time.
Estimation of the $\beta$ terms is possible by ignoring $h_0$ as a 'nuissance parameter' and using the 'partial likelihood' function [@Cox1975]:

$$
\calL(\beta) = \prod_{k:\tbk} \Bigg(\frac{\exp(\eta_k)}{\sum_{j \in \calR_{\tbk}} \exp(\eta_j)}\Bigg)
$$ {#eq-partial}

with log-likelihood

$$
\call(\beta) = \sum_{k:\tbk} \Bigg(\eta_k - \log \Big(\sum_{j \in \calR_{\tbi}} \exp(\eta_j)\Big)\Bigg)
$$

Given these formulas, one can make relative risk predictions (@sec-survtsk) as well as analysing patterns in the data by computing hazard ratios, which provide a method for identifying the covariates that have a significant effect on an individual's hazard.
However, to make a full survival distribution prediction, the baseline hazard must be considered.

The baseline hazard, $h_0$, captures the average (baseline) risk for all observations at a given time-point.
The Kaplan-Meier estimator is commonly used to estimate the baseline survival, $S_0$, in complex machine learning algorithms, the hazard then follows from $h_0(\tau) = -S'(\tau)/S(\tau)$.
However, in the case of the Cox model, the conditional non-parametric Breslow estimator [@Cox1975] is more suitable as it accounts for covariates and is directly related to the partial likelihood function (@eq-partial):

$$
\hat{H}_{Bres}(\tau) = \sum_{\tbk \leq \tau} \frac{d_{\tbk}}{\sum_{j \in \calR_{\tbk}} \exp(\hat{\eta}_j)}
$$ {#eq-breslow}

where $\hat{\eta}_j$ is the estimated linear predictor for observation $j$.
Note that if the value for all covariates was zero, which one could think of equivalent as there being no covariates, then the Breslow estimator is identical to the Nelson-Aalen estimator:

$$
\hat{H}_{Bres}(\tau) = \sum_{\tbk \leq \tau} \frac{d_{\tbk}}{\sum_{j \in \calR_{\tbk}} 1} = \sum_{\tbk \leq \tau} \frac{d_{\tbk}}{n_{\tbk}} = \hat{H}_{NA}(\tau)
$$

With these formulae, the Cox PH can be used as a predictive model by using training data to estimate $\hat{\bsbeta}$ with (@eq-partial), using these fitted coefficients to predict $\hat{\bseta}$ for new observations, estimating the cumulative baseline hazard with (@eq-breslow), then calculating the derivative and using the original form in (@eq-cox):

$$
\hat{h}(\tau|\xx_i)= \hatH'_{Bres}(\tau)\exp(\hat{\eta}_i)
$$

where $\hatH'$ is the first derivative of the Breslow estimator, which is the (non-cumulative) hazard function.

The Cox model is a powerful tool that is constantly being found to outperform machine learning models [@Gensheimer2018; @Luxhoj1997; @VanBelle2011b].
Moreover, it is highly interpretable and as such has a long history of usage in clinical prediction modelling and analysis.
However, the method does encode an assumption that is often violated in real life: it is very rare for the risk of an event to be constant over time.
Whether this assumption violation matters, is a matter of debate.
In classical literature, if the model is being used for analysis and the underlying assumptions are demonstrably false, then clearly it would be a poor choice to explain underlying data patterns.
On the other hand, if the Cox model is only being used for prediction, and the model is shown to outperform other models (with less stringent assumptions) in an empirical benchmark experiment, then the assumption violation matters less.

### Parametric Proportional Hazards

The baseline hazard is advantageous as it removes any burden to assume a particular underlying probability distribution.
However, there are some cases where modelling a particular distribution may make sense.
On these occasions, the baseline hazard can be replaced by the hazard function corresponding to a particular probability distribution, with three common choices [@Kalbfleisch2011; @Wang2017] being the Exponential, Gompertz, and Weibull distributions.
The Weibull distribution is particularly important as it reduces to the Exponential distribution when the shape parameter equals $1$ and moreover it is the only distribution for which both the proportional hazards and accelerated failure time assumptions can hold true.

Assuming a PH model one can plug in the hazard and survival functions from the Weibull distribution into @eq-cox and @eq-cox-surv respectively.
First recall for a $\Weib(\gamma, \lambda)$ distribution with shape parameter $\gamma$ and scale parameter $\lambda$, the relevant functions can be given by [@KalbfleischPrentice1973]:

$$
h(x) = \lambda\gamma x^{\gamma-1}
$$

and

$$
S(x) = \exp(-\lambda x^\gamma)
$$

Taking these to be the baseline hazard and survival functions respectively, they can be substituted into the Cox model as follows:

$$
h_{WeibullPH}(\tau|\xx_i)= (\lambda\gamma \tau^{\gamma-1}) \exp(\eta_i)
$$ {#eq-cox}

or equivalently

$$
S_{WeibullPH}(\tau|\xx_i)= (\exp(-\lambda \tau^\gamma))^{\exp(\eta_i)}
$$ {#eq-cox-surv}

Finally, these formulae can now be used to define the full likelihood (@sec-surv-estimation-param) for the WeibullPH model:

$$
\begin{aligned}
\calL(\bstheta) &= \prod_{i=1}^n h_Y(t_i|\bstheta)^{\delta_i}S_Y(t_i|\bstheta) \\
&= \prod_{i=1}^n \Big((\lambda\gamma t_i^{\gamma-1} \exp(\eta_i))^{\delta_i}\Big)\Big(\exp(-\lambda t_i^\gamma)^{\exp(\eta_i)}\Big) \\
\end{aligned}
$$

with log-likelihood

$$
\begin{aligned}
\call(\bstheta) &= \sum_{i=1}^n \delta_i[\log(\lambda\gamma) + (\gamma-1)\log(t_i) + \eta_i] - \lambda\exp(\eta_i)t_i^\gamma \\
&\propto \sum_{i=1}^n \delta_i[\log(\lambda\gamma) + \gamma\log(t_i) + \eta_i] - \lambda\exp(\eta_i)t_i^\gamma \\
\end{aligned}
$$

These likelihoods can be passed into machine learning models that are constructed around closed-form likelihood expressions to be optimized, for example in boosting (@sec-boost) and neural networks (@sec-nnet).
Parameters can then be fit using maximum likelihood estimation (MLE) with respect to all unknown parameters $\bstheta = \{\bsbeta, \gamma, \lambda\}$.

When considering which probability distributions to model in predictive experiments, Weibull is a common starting choice [@Hielscher2010; @CoxSnell1968; @Rahman2017], its two parameters make it a flexible fit to data but on the other hand it can be easily reduced to Exponential when $\gamma=1$.
Gompertz [@Gompertz1825] is commonly used in medical domains, especially when describing adult lifespans.
In a machine learning context, one can select the optimal distribution for future predictive performance by running a benchmark experiment.
Moreover, it transpires that model inference and predictions are largely insensitive to the choice of distribution  [@Collett2014; @Reid1994].
In contrast to the semi-parametric Cox model, fully parametric PH models can predict absolutely continuous survival distributions, they do not treat the baseline hazard as a nuisance, and in general will result in more precise and interpretable predictions if the distribution is correctly specified  [@Reid1994; @RoystonParmar2002].

## Accelerated Failure Time {#sec-surv-models-param}

Whilst misspecification of the distribution tends not to affect predictions too greatly, PH models will generally perform worse when the PH assumption is not valid. PH models can be extended to include time-varying coefficients or model stratification  [@Cox1972] but even with these adaptations the model may not reflect reality.
For example, the predicted hazard in a PH model will be either monotonically increasing or decreasing but there are many scenarios where this is not realistic, such as when recovering from a major operation where risks tends to increase in the short-term before decreasing.
Accelerated failure time models overcome this disadvantage and allow more flexible modelling, discussed next.

### Accelerated Failure Time
In contrast to the PH assumption, where a unit increase in a covariate is a multiplicative increase in the hazard rate, the Accelerated Failure Time (AFT) assumption means that a unit increase in a covariate results in an acceleration or deceleration towards death (expanded on below). The hazard representation of an AFT model demonstrates how the interpretation of covariates differs from PH models,
$$
h(\tau|X_i)= h_0(\exp(-X_i\beta)\tau)\exp(-X_i\beta)
$$
where $\beta = (\beta_1,...,\beta_p)$ are model coefficients. In contrast to PH models, the 'risk' component, $\exp(-X_i\beta)$, is the exponential of the *negative* linear predictor and therefore an increase in a covariate value results in a decrease of the predicted hazard. This representation also highlights how AFT models are more flexible than PH as the predicted hazard can be non-monotonic. For example the hazard of the Log-logistic distribution ((@fig-litreview-logloghaz)) is highly flexible depending on chosen parameters. Not only can the AFT model offer a wider range of shapes for the hazard function but it is more interpretable. Whereas covariates in a PH model act on the hazard, in an AFT they act on time, which is most clearly seen in the log-linear representation,
$$
\log Y_i = \mu + \alpha_1X_{i1} + \alpha_2X_{i2} + ... + \alpha_pX_{ip} + \sigma\epsilon_i
$$
where $\mu$ and $\sigma$ are location and scale parameters respectively, $\alpha_1,...,\alpha_p$ are model coefficients, and $\epsilon_i$ is a random error term. In this case a one unit increase in covariate $X_{ij}$ means a $\alpha_j$ increase in the logarithmic survival time. For example if $\exp(X_i\alpha) = 0.5$ then $i$ 'ages' at double the baseline 'speed'. Or less abstractly if studying the time until death from cancer then  $\exp(X_i\alpha) = 0.5$ can be interpreted as 'the entire process from developing tumours to metastasis and eventual death in subject $i$ is twice as fast than the normal', where 'normal' refers to the baseline when all covariates are $0$.

Specifying a particular distribution for $\epsilon_i$ yields a fully-parametric AFT model. Common distribution choices include Weibull, Exponential, Log-logistic, and Log-Normal  [@Kalbfleisch2011; @Wang2017]. The Buckley-James estimator  [@Buckley1979] is a semi-parametric AFT model that non-parametrically estimates the distribution of the errors however this model has no theoretical justification and is rarely fit in practice  [@Wei1992]. The fully-parametric model has theoretical justifications, natural interpretability, and can often provide a better fit than a PH model, especially when the PH assumption is violated  [@Patel2006; @Qi2009; @Zare2015].

![Log-logistic hazard curves with a fixed scale parameter of 1 and a changing shape parameter. x-axis is time and y-axis is the log-logistic hazard as a function of time.](Figures/classical/llog_hazard.png){#fig-litreview-logloghaz fig-alt="TODO"}

### Proportional Odds

Proportional odds (PO) models  [@Bennett1983] fit a proportional relationship between covariates and the odds of survival beyond a time $\tau$,
$$
O_i(\tau) = \frac{S_i(\tau)}{F_i(\tau)} = O_0(\tau)\exp(X_i\beta)
$$
where $O_0$ is the baseline odds.

In this model, a unit increase in a covariate is a multiplicative increase in the odds of survival after a given time and the model can be interpreted as estimating the log-odds ratio. There is no simple closed form expression for the partial likelihood of the PO model and hence in practice a Log-logistic distribution is usually assumed for the baseline odds and the model is fit by maximum likelihood estimation on the full likelihood  [@Bennett1983].

Perhaps the most useful feature of the model is convergence of hazard functions  [@Kirmani2001], which states $h_i(\tau)/h_0(\tau) \rightarrow 1$ as $\tau \rightarrow \infty$. This property accurately reflects real-world scenarios, for example if comparing chemotherapy treatment on advanced cancer survival rates, then it is expected that after a long period (say 10 years) the difference in risk between groups is likely to be negligible. This is in contrast to the PH model that assumes the hazard ratios are constant over time, which is rarely a reflection of reality.

In practice, the PO model is harder to fit and is less flexible than PH and AFT models, both of which can also produce odds ratios. This may be a reason for the lack of popularity of the PO model, in addition there is limited off-shelf implementations  [@Collett2014]. Despite PO models not being commonly utilised, they have formed useful components of neural networks (@sec-nnet) and flexible parametric models (below).

### Flexible Parametric Models

Royston-Parmar flexible parametric models  [@RoystonParmar2002] extend PH and PO models by estimating the baseline hazard with natural cubic splines. The model was designed to keep the form of the PH or PO methods but without the semi-parametric problem of estimating a baseline hazard that does not reflect reality (see above), or the parametric problem of misspecifying the survival distribution.

To provide an interpretable, informative and smooth hazard, natural cubic splines are fit in place of the baseline hazard. The crux of the method is to use splines to model time on a log-scale and to either estimate the log cumulative Hazard for PH models, $\log H(\tau|X_i) = \log H_0(\tau) + X_i\beta$, or the log Odds for PO models, $\log O(\tau|X_i) = \log O_0(\tau) + X_i\beta$, where $\beta$ are model coefficients to fit, $H_0$ is the baseline cumulative hazard function and $O_0$ is the baseline odds function. For the flexible PH model, a Weibull distribution is the basis for the baseline distribution and a Log-logistic distribution for the baseline odds in the flexible PO model. $\log H_0(\tau)$ and $\log O_0(\tau)$ are estimated by natural cubic splines with coefficients fit by maximum likelihood estimation. The standard full likelihood is optimised, full details are not provided here. Between one and three internal knots are recommended for the splines and the placement of knots does not greatly impact upon the fitted model  [@RoystonParmar2002].

Advantages of the model include being: interpretable, flexible, can be fit with time-dependent covariates, and it returns a continuous function. Moreover many of the parameters, including the number and position of knots, are tunable, although Royston and Parmar advised against tuning and suggest often only one internal knot is required  [@RoystonParmar2002]. A recent simulation study demonstrated that even with an increased number of knots (up to seven degrees of freedom), there was little bias in estimation of the survival and hazard functions  [@Bower2019]. Despite its advantages, a 2018 review  [@Ng2018] found only twelve instances of published flexible parametric models since Royston and Parmar's 2002 paper, perhaps because it is more complex to train, has a less intuitive fitting procedure than alternatives, and has limited off-shelf implementations; i.e. is less transparent and accessible than parametric alternatives.

The PH and AFT models are both very transparent and accessible, though require slightly more expert knowledge than the CPH in order to specify the 'correct' underlying probability distribution. Interestingly whilst there are many papers comparing PH and AFT models to one another using in-sample metrics (@sec-eval-insample) such as AIC [@Georgousopoulou2015; @Habibi2018; @Moghimi-dehkordi2008; @Zare2015], no benchmark experiments could be found for out-of-sample performance. PO and spline models are less transparent than PH and AFT models and are even less accessible, with very few implementations of either. No conclusions can be drawn about the predictive performance of PO or spline models due to a lack of suitable benchmark experiments.

## Improving Classical Models {#sec-classical-improving}

* Non-linear effects: splines/additive models
* Dimension reduction: Regularization, feature selection and filters
* Ensembles: Bagging, boosting (mboost) and stacking

## Conclusion

:::: {.callout-warning icon=false}

## Key takeaways

* The boundary between machine learning and classical statistical models is fuzzy, and classical survival models often outperform machine learning alternatives.

::::

:::: {.callout-tip icon=false}

## Further reading

* TODO: Proportional odds
* To learn more about hazard ratios from Cox models and complexities in interpretation, we recommend @Sashegyi2017 and @Spruance2004.

::::
